let playBtn = document.getElementById('playBtn');
let gameBoard = document.getElementById('game-anchor');
playBtn = addEventListener('click', () => {
    
});

let player1Color = '#ff4a0a';
let player2Color = '#de1c97'; 
let currentPlayer = 1;
let gameInProgress = true;


let tableRow = document.getElementsByTagName('tr');
let tableCell = document.getElementsByTagName('td');
let playerTurn = document.querySelector('.current-player');
const cells = document.querySelectorAll('.cell');
const resetBtn = document.querySelector('.reset-button');


playerTurn.textContent  = "Player 1's turn!";


Array.prototype.forEach.call(tableCell, (cell) => {
    cell.addEventListener('click', changeColor);
    cell.style.backgroundColor = 'white';
});



function changeColor (e) {
    let column = e.target.cellIndex;
    let row = [];

    for(let i = 5; i > -1; i--){
        if (tableRow[i].children[column].style.backgroundColor == 'white'){
            row.push(tableRow[i].children[column]);
            if (gameInProgress) {
                if (currentPlayer === 1){
                    row[0].style.backgroundColor = player1Color;                
                    if(rowCheck() || columnCheck() || diagonalCheck1() || diagonalCheck2()){
                        playerTurn.textContent = 'Player 1 wins!!!';
                        playerTurn.style.color = player1Color;
                        gameInProgress = false;
                        return(console.log('Player 1 wins!!!'));
                    } else if (drawCheck()) {
                        playerTurn.textContent = "Game is a draw!";
                        return(console.log('Game is a draw!'));
                    }
                    playerTurn.textContent = "Player 2's turn!";
                    return currentPlayer = 2;
                } else {
                    row[0].style.backgroundColor = player2Color;
                    playerTurn.textContent = "Player 1's turn!";
                    if (rowCheck() || columnCheck() || diagonalCheck1() || diagonalCheck2()){
                        playerTurn.textContent = 'Player 2 wins!!!';
                        playerTurn.style.color = player2Color;
                        gameInProgress = false;
                        return(console.log('Player 2 wins!!!'));
                    } else if (drawCheck()) {
                        playerTurn.textContent = "Game is a draw.";
                        return(console.log('Game is a draw.'));
                    }
                    playerTurn.textContent = "Player 1's turn!";
                    return currentPlayer = 1;
                }
            } 
        }
    
    }
}

function colorMatchCheck (one, two, three, four) {
    return (one == two && one == three && one == four && one !== 'white');
}

function rowCheck () {
    for (let row = 0; row < tableRow.length; row++) {
        for (let column = 0; column < 4; column++) {
            if(colorMatchCheck(tableRow[row].children[column].style.backgroundColor, 
                tableRow[row].children[column+1].style.backgroundColor, 
                tableRow[row].children[column+2].style.backgroundColor, 
                tableRow[row].children[column+3].style.backgroundColor)){
                    return true;
                }
        }
    }
};

function columnCheck () {
    for (let column = 0; column < 7; column++) {
        for (let row = 0; row < 3; row++) {
            if (colorMatchCheck(tableRow[row].children[column].style.backgroundColor,
                tableRow[row+1].children[column].style.backgroundColor,
                tableRow[row+2].children[column].style.backgroundColor,
                tableRow[row+3].children[column].style.backgroundColor)) {
                    return true;
                }
        }
    }
};

function diagonalCheck1 () {
    for (let column = 0; column < 4; column++) {
        for (row = 0; row < 3; row ++) {
            if (colorMatchCheck(tableRow[row].children[column].style.backgroundColor,
                tableRow[row+1].children[column+1].style.backgroundColor,
                tableRow[row+2].children[column+2].style.backgroundColor,
                tableRow[row+3].children[column+3].style.backgroundColor)) {
                    return true;
                }
        }
    }
}

function diagonalCheck2 () {
    for (let column = 0; column < 4; column++) {
        for (row = 5; row > 2; row--) {
            if (colorMatchCheck(tableRow[row].children[column].style.backgroundColor,
                tableRow[row-1].children[column+1].style.backgroundColor,
                tableRow[row-2].children[column+2].style.backgroundColor,
                tableRow[row-3].children[column+3].style.backgroundColor)) {
                    return true;
                }
        }
    }
}

function drawCheck () {
    let fullSlot = [];
    for (let i = 0; i <tableCell.length; i++) {
        if (tableCell[i].style.backgroundColor !== 'white') {
            fullSlot.push(tableCell[i]);
        }
    }
    if (fullSlot.length === tableCell.length) {
        return true;
    }
}

resetBtn.addEventListener('click', () => {
    cells.forEach(slot => {
        slot.style.backgroundColor = 'white';
    });
    currentPlayer = 1;    
    playerTurn.style.color = 'white';
    playerTurn.textContent = "Player 1's turn!";
    gameInProgress = true;
});

* {
	margin: 0;
	padding: 0;
	text-decoration: none;
	font-family: 'Lato', sans-serif;
	list-style-type: none;
}

body {
	background-attachment: fixed;
	background-repeat: no-repeat;
	background-image: url(https://picsum.photos/1920/1080);
}

.wrapper {
    display: grid;
    display: grid;
	grid-template-columns: minmax(25px, 1fr) minmax(100px, 1400px) minmax(25px, 1fr);
	grid-template-rows: repeat(3, auto);
}

.title-container {
    margin: 20px;
    height: 65px;
    width: 100%;
    line-height: 65px;
    grid-column: 2;
    justify-self: center;
}

.title-container h1 {
    text-align: center;
    font-size: 50px;
    font-weight: bolder;
    color: #fff;
}

.grid {
    padding: 2px;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(5, 1fr);
    grid-gap: 2px;
    grid-column: 2;
    justify-self: center;
    background-color: #e0e0e0;
}

.cell {
    height: 150px;
    width: 150px;
    background-color: #fff;
    text-align: center;
}

.cell-text {
    margin: 0 20px;
    position: relative;
    top: 50%;
    transform: translateY(-50%);
    font-size: 17px;
    font-weight: bolder;
    color: #242424;
}

.shuffle-button-container {
    height: 100px;
    line-height: 100px;
    grid-column: 2;
    justify-self: center;
}

.shuffle-button {
    padding: 10px 20px;
    font-size: 25px;
    font-weight: bolder;
    background-color: #e0e0e0;
    border: none;
    outline: none;
    box-shadow: none;
    color: #242424;
}

.shuffle-button:hover {
    cursor: pointer;
    background-color: #7cbde9;
    color: #fff;
    border-color: #7cbde9;
}
